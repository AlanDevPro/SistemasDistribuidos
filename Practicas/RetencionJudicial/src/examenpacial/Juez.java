package examenpacial;

import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.Scanner;

public class Juez {
    public static void main(String[] args) {
        try {
            // Conectarse al servidor ASFI usando RMI
            Registry registry = LocateRegistry.getRegistry("localhost", 1099);
            IAsfi servidorAsfi = (IAsfi) registry.lookup("Asfi");

            Scanner scanner = new Scanner(System.in);
            ArrayList<Cuenta> cuentas = new ArrayList<>();
            
            while (true) {
                System.out.println("\n--- MEN√ö JUEZ ---");
                System.out.println("1. Buscar cuentas");
                System.out.println("2. Salir");
                System.out.print("Seleccione una opci√≥n: ");
                
                int opcion;
                try {
                    opcion = Integer.parseInt(scanner.nextLine());
                } catch (NumberFormatException e) {
                    System.out.println("‚ö†Ô∏è Ingrese un n√∫mero v√°lido.");
                    continue;
                }

                switch (opcion) {
                    case 1:  // Corregido (Evitar "->" aqu√≠ si se usa m√°s de una l√≠nea de c√≥digo)
                        // Solicitar datos de b√∫squeda
                        System.out.print("Ingrese CI: ");
                        String ci = scanner.nextLine();
                        System.out.print("Ingrese nombres: ");
                        String nombres = scanner.nextLine();
                        System.out.print("Ingrese apellidos: ");
                        String apellidos = scanner.nextLine();
                        
                        // Consultar cuentas en ASFI
                        cuentas = servidorAsfi.consultarCuentas(ci, nombres, apellidos);

                        if (cuentas.isEmpty()) {
                            System.out.println("\n‚ö†Ô∏è  No se encontraron cuentas para el titular: " + nombres + " " + apellidos);
                        } else {
                            System.out.println("\n=====================================");
                            System.out.println("         üìå Cuentas Encontradas       ");
                            System.out.println("=====================================");

                            for (int i = 0; i < cuentas.size(); i++) {
                                Cuenta cuenta = cuentas.get(i);
                                System.out.printf("üîπ Cuenta %d\n", i + 1);
                                System.out.printf("   üè¶ Banco: %s\n", cuenta.getBanco());
                                System.out.printf("   üÜî NroCuenta: %s\n", cuenta.getNroCuenta());
                                System.out.printf("   üí∞ Saldo: Bs. %.2f\n", cuenta.getSaldo());
                                System.out.println("=====================================");
                            }

                            // Selecci√≥n de cuenta
                            System.out.print("Seleccione el n√∫mero de cuenta: ");
                            int seleccion;
                            try {
                                seleccion = Integer.parseInt(scanner.nextLine());
                                if (seleccion < 1 || seleccion > cuentas.size()) {
                                    System.out.println("‚ö†Ô∏è Selecci√≥n inv√°lida.");
                                    break;
                                }
                            } catch (NumberFormatException e) {
                                System.out.println("‚ö†Ô∏è Ingrese un n√∫mero v√°lido.");
                                break;
                            }

                            System.out.print("Ingrese monto a retener: ");
                            double monto;
                            try {
                                monto = Double.parseDouble(scanner.nextLine());
                                if (monto <= 0) {
                                    System.out.println("‚ö†Ô∏è El monto debe ser mayor a 0.");
                                    break;
                                }
                            } catch (NumberFormatException e) {
                                System.out.println("‚ö†Ô∏è Ingrese un monto v√°lido.");
                                break;
                            }

                            Cuenta cuentaSeleccionada = cuentas.get(seleccion - 1);
                            boolean exito = servidorAsfi.retenerMonto(cuentaSeleccionada, monto, "Retenci√≥n judicial");
                            
                            if (exito) {
                                System.out.println("‚úÖ Transacci√≥n con √©xito.");
                            } else {
                                System.out.println("‚ùå No se pudo realizar la retenci√≥n.");
                            }
                        }
                        break;  // Se agreg√≥ el break para evitar problemas

                    case 2:
                        System.out.println("Saliendo del sistema...");
                        scanner.close();
                        return;

                    default:
                        System.out.println("‚ö†Ô∏è Opci√≥n no v√°lida.");
                }
            }
        } catch (NotBoundException | RemoteException e) {
            System.err.println("‚ö†Ô∏è Error en la conexi√≥n con ASFI: " + e.getMessage());
        }
    }
}
